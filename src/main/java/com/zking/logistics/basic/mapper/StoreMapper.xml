<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zking.logistics.basic.mapper.StoreMapper">
    <resultMap id="BaseResultMap" type="com.zking.logistics.basic.model.Store">
        <constructor>
            <idArg column="UUID" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="NAME" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="address" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="EMPUUID" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    UUID, NAME, address, EMPUUID
  </sql>
    <delete id="deleteByPrimaryKey" parameterType="com.zking.logistics.basic.model.Store">
        delete from store
    where UUID = #{uuid}
    </delete>
    <select id="queryStorePager" resultType="map" parameterType="com.zking.logistics.basic.model.Store">

        SELECT s.uuid,s.name,s.address,e.name ename,s.empuuid
        FROM store s
        LEFT JOIN emp e ON s.empuuid=e.uuid
        INNER JOIN role r ON e.role_id=r.uuid
        WHERE r.name='库管员'
        <if test="null!=name and ''!=name">
            and s.name LIKE concat(concat('%',#{name}),'%')
        </if>
        <if test="null!=address and ''!=address">
            and s.address LIKE concat(concat('%',#{address}),'%')
        </if>
        ORDER by uuid DESC

    </select>
    <select id="selectByName" resultType="com.zking.logistics.basic.model.Store">
        select
        <include refid="Base_Column_List"/>
        from store
        where name = #{name}
    </select>
    <select id="empMap" resultType="map">

      SELECT e.uuid,e.name FROM emp e
      INNER JOIN role r
      ON e.role_id=r.uuid
      WHERE r.name='库管员'

    </select>
    <select id="StoreList" resultType="com.zking.logistics.basic.model.Store">
        SELECT <include refid="Base_Column_List"/>
        from store where 1=1
    </select>
    <insert id="insert" parameterType="com.zking.logistics.basic.model.Store">
    insert into store ( NAME, address,
      EMPUUID)
    values (#{name,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
      #{empuuid,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.zking.logistics.basic.model.Store">
        insert into store
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uuid != null">
                UUID,
            </if>
            <if test="name != null">
                NAME,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="empuuid != null">
                EMPUUID,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uuid != null">
                #{uuid,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="empuuid != null">
                #{empuuid,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.zking.logistics.basic.model.Store">
        update store
        <set>
            <if test="name != null">
                NAME = #{name,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="empuuid != null">
                EMPUUID = #{empuuid,jdbcType=INTEGER},
            </if>
        </set>
        where UUID = #{uuid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zking.logistics.basic.model.Store">
    update store
    set NAME = #{name,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      EMPUUID = #{empuuid,jdbcType=INTEGER}
    where UUID = #{uuid,jdbcType=INTEGER}
  </update>
</mapper>