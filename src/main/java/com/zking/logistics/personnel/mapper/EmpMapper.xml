<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zking.logistics.personnel.mapper.EmpMapper" >
  <resultMap id="BaseResultMap" type="com.zking.logistics.personnel.model.Emp" >
    <constructor >
      <idArg column="UUID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="USERNAME" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="PWD" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="NAME" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="GENDER" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="EMAIL" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="TELE" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="ADDRESS" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="BIRTHDAY" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="DEPUUID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="role_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    UUID, USERNAME, PWD, NAME, GENDER, EMAIL, TELE, ADDRESS, BIRTHDAY, DEPUUID, role_id
  </sql>
  <delete id="deleteEmp">
    delete from emp where uuid=#{uuid}
  </delete>
  <delete id="delByKey" parameterType="com.zking.logistics.personnel.model.Emp">
    delete from emp where uuid=#{uuid}
  </delete>
  <select id="querySingleEmp" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from emp
    where UUID = #{uuid,jdbcType=INTEGER}
  </select>
  <select id="querySingleEmpUsername" resultType="com.zking.logistics.personnel.model.Emp">
    SELECT <include refid="Base_Column_List"/>
    from emp where username=#{username}

  </select>
  <select id="queryEmpPager" resultType="com.zking.logistics.personnel.vo.EmpVo"
          parameterType="com.zking.logistics.personnel.vo.EmpVo">

    select
    emp.uuid uuid,username,pwd, emp.name, gender, email, emp.tele, address,
    birthday, depuuid,dep.name as dep_name,role.name rname,emp.`role_id` roleid
    from emp,dep,role
    where emp.depuuid=dep.uuid
    and emp.`role_id`=role.`uuid`
    <if test="null!=name and ''!=name">
      and emp.name like concat('%',concat(#{name},'%'))
    </if>

    <if test="genders.size()!=0">
      <foreach item="item" index="index" collection="genders" open=" and(" separator="or" close=")">
        gender=#{item}
      </foreach>
    </if>

    <if test="null!=depuuid and ''!=depuuid">
      and depuuid=#{depuuid}
    </if>


  </select>
  <select id="queryEmpMapPager" resultType="map" parameterType="com.zking.logistics.personnel.vo.EmpVo">
    select e.`uuid`,e.`username`,e.`pwd`,e.`name`,e.`gender`,e.`tele`,e.`email`,
    e.`address`,e.`birthday`,e.`depuuid`,e.`role_id` roleid,d.`name` dname,r.`name` rname
    from emp e inner join dep d on e.`depuuid`=d.`uuid`
    inner join role r on r.`uuid`=e.role_id
    where 1=1
    <if test="null!=name and ''!=name">
      and e.name like concat('%',concat(#{name},'%'))
    </if>

    <if test="genders.size()!=0">
      <foreach item="item" index="index" collection="genders" open=" and(" separator="or" close=")">
        gender=#{item}
      </foreach>
    </if>

    <if test="null!=depuuid and ''!=depuuid">
      and depuuid=#{depuuid}
    </if>
  </select>
  <insert id="insertEmp" parameterType="com.zking.logistics.personnel.model.Emp" >
    insert into emp
    <trim prefix="(" suffix=")" suffixOverrides="," >

      <if test="username != null" >
        USERNAME,
      </if>
      <if test="pwd != null" >
        PWD,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="gender != null" >
        GENDER,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="tele != null" >
        TELE,
      </if>
      <if test="address != null" >
        ADDRESS,
      </if>
      <if test="birthday != null" >
        BIRTHDAY,
      </if>
      <if test="depuuid != null" >
        DEPUUID,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >

      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="tele != null" >
        #{tele,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="depuuid != null" >
        #{depuuid,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateEmp" parameterType="com.zking.logistics.personnel.model.Emp" >
    update emp
    <set >
      <if test="username != null" >
        USERNAME = #{username,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        PWD = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        GENDER = #{gender,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="tele != null" >
        TELE = #{tele,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        ADDRESS = #{address,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        BIRTHDAY = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="depuuid != null" >
        DEPUUID = #{depuuid,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
    </set>
    where UUID = #{uuid,jdbcType=INTEGER}
  </update>
</mapper>